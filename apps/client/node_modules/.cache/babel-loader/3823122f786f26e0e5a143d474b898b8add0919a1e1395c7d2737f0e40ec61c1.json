{"ast":null,"code":"var _jsxFileName = \"/Users/yoojunsang/Desktop/justpay_release/apps/client/src/components/common/FullWidthButton.tsx\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FullWidthButton(_ref) {\n  let {\n    text,\n    onClick,\n    color\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    onClick: onClick,\n    color: color,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c = FullWidthButton;\nconst StyledButton = styled.button`\n  width: 100%;\n\n  ${_ref2 => {\n  let {\n    color,\n    theme\n  } = _ref2;\n  return color === 'green' ? css`\n          background-color: rgba(22, 215, 192, 0.15);\n          color: ${theme.colors.green_text};\n          font: ${theme.fonts.M_14};\n          padding: 1rem 0;\n          border-radius: 1px;\n        ` : css`\n          background-color: ${theme.colors.button_black};\n          color: ${theme.colors.white};\n          font: ${theme.fonts.M_17};\n          padding: 14px 0;\n          border-radius: 10px;\n        `;\n}}\n`;\n_c2 = StyledButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"FullWidthButton\");\n$RefreshReg$(_c2, \"StyledButton\");","map":{"version":3,"names":["React","styled","css","jsxDEV","_jsxDEV","FullWidthButton","_ref","text","onClick","color","StyledButton","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","button","_ref2","theme","colors","green_text","fonts","M_14","button_black","white","M_17","_c2","$RefreshReg$"],"sources":["/Users/yoojunsang/Desktop/justpay_release/apps/client/src/components/common/FullWidthButton.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface FullButtonProps {\n  text: string;\n  color: 'green' | 'black';\n  onClick?: () => void;\n}\n\nexport default function FullWidthButton({ text, onClick, color }: FullButtonProps) {\n  return (\n    <StyledButton onClick={onClick} color={color}>\n      {text}\n    </StyledButton>\n  );\n}\n\nconst StyledButton = styled.button`\n  width: 100%;\n\n  ${({ color, theme }) =>\n    color === 'green'\n      ? css`\n          background-color: rgba(22, 215, 192, 0.15);\n          color: ${theme.colors.green_text};\n          font: ${theme.fonts.M_14};\n          padding: 1rem 0;\n          border-radius: 1px;\n        `\n      : css`\n          background-color: ${theme.colors.button_black};\n          color: ${theme.colors.white};\n          font: ${theme.fonts.M_17};\n          padding: 14px 0;\n          border-radius: 10px;\n        `}\n`;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,IAAIC,GAAG,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQhD,eAAe,SAASC,eAAeA,CAAAC,IAAA,EAA4C;EAAA,IAA3C;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAuB,CAAC,GAAAH,IAAA;EAC/E,oBACEF,OAAA,CAACM,YAAY;IAACF,OAAO,EAAEA,OAAQ;IAACC,KAAK,EAAEA,KAAM;IAAAE,QAAA,EAC1CJ;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEnB;AAACC,EAAA,GANuBX,eAAe;AAQvC,MAAMK,YAAY,GAAGT,MAAM,CAACgB,MAAO;AACnC;AACA;AACA,IAAIC,KAAA;EAAA,IAAC;IAAET,KAAK;IAAEU;EAAM,CAAC,GAAAD,KAAA;EAAA,OACjBT,KAAK,KAAK,OAAO,GACbP,GAAI;AACZ;AACA,mBAAmBiB,KAAK,CAACC,MAAM,CAACC,UAAW;AAC3C,kBAAkBF,KAAK,CAACG,KAAK,CAACC,IAAK;AACnC;AACA;AACA,SAAS,GACDrB,GAAI;AACZ,8BAA8BiB,KAAK,CAACC,MAAM,CAACI,YAAa;AACxD,mBAAmBL,KAAK,CAACC,MAAM,CAACK,KAAM;AACtC,kBAAkBN,KAAK,CAACG,KAAK,CAACI,IAAK;AACnC;AACA;AACA,SAAS;AAAA,CAAC;AACV,CAAC;AAACC,GAAA,GAnBIjB,YAAY;AAAA,IAAAM,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}