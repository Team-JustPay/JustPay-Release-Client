"use strict";
(self["webpackChunk_just_pay_design_system"] = self["webpackChunk_just_pay_design_system"] || []).push([["FullWidthButton-stories"],{

/***/ "./stories/FullWidthButton.stories.ts":
/*!********************************************!*\
  !*** ./stories/FullWidthButton.stories.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Black: () => (/* binding */ Black),
/* harmony export */   Green: () => (/* binding */ Green),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _FullWidthButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./FullWidthButton */ "./stories/FullWidthButton.tsx");

const meta = {
  // 문서 제목
  title: 'FullWidthButton',
  // 자동으로 문서 생성
  tags: ['autodocs'],
  component: _FullWidthButton__WEBPACK_IMPORTED_MODULE_0__["default"]
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
const Black = {
  args: {
    text: '결제하기',
    color: 'black'
  }
};
const Green = {
  args: {
    text: '이 거래글 링크 복사하기',
    color: 'green'
  }
};
Black.parameters = {
  ...Black.parameters,
  docs: {
    ...Black.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: '\uACB0\uC81C\uD558\uAE30',\n    color: 'black'\n  }\n}",
      ...Black.parameters?.docs?.source
    }
  }
};
Green.parameters = {
  ...Green.parameters,
  docs: {
    ...Green.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: '\uC774 \uAC70\uB798\uAE00 \uB9C1\uD06C \uBCF5\uC0AC\uD558\uAE30',\n    color: 'green'\n  }\n}",
      ...Green.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Black", "Green"];

/***/ }),

/***/ "./stories/FullWidthButton.tsx":
/*!*************************************!*\
  !*** ./stories/FullWidthButton.tsx ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ FullWidthButton)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "../../.yarn/cache/react-npm-18.2.0-1eae08fee2-88e38092da.zip/node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ "../../.yarn/__virtual__/styled-components-virtual-18eaa5dd19/0/cache/styled-components-npm-6.0.0-rc.2-4007-2deced225d-b63dc76343.zip/node_modules/styled-components/dist/styled-components.browser.esm.js");
/* harmony import */ var _styles_theme__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/theme */ "./styles/theme.ts");



function FullWidthButton({
  text,
  onClick,
  color
}) {
  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StyledButton, {
    onClick: onClick,
    color: color
  }, text);
}
FullWidthButton.displayName = "FullWidthButton";
const StyledButton = styled_components__WEBPACK_IMPORTED_MODULE_2__["default"].button`
  width: 100%;
  border: none;

  ${({
  color
}) => color === 'green' ? styled_components__WEBPACK_IMPORTED_MODULE_2__.css`
          background-color: rgba(22, 215, 192, 0.15);
          color: ${_styles_theme__WEBPACK_IMPORTED_MODULE_1__["default"].colors.green_text};
          font: ${_styles_theme__WEBPACK_IMPORTED_MODULE_1__["default"].fonts.M_14};
          padding: 1rem 0;
          border-radius: 1px;
        ` : styled_components__WEBPACK_IMPORTED_MODULE_2__.css`
          background-color: ${_styles_theme__WEBPACK_IMPORTED_MODULE_1__["default"].colors.button_black};
          color: ${_styles_theme__WEBPACK_IMPORTED_MODULE_1__["default"].colors.white};
          font: ${_styles_theme__WEBPACK_IMPORTED_MODULE_1__["default"].fonts.M_17};
          padding: 14px 0;
          border-radius: 10px;
        `}
`;
try {
    // @ts-ignore
    FullWidthButton.displayName = "FullWidthButton";
    // @ts-ignore
    FullWidthButton.__docgenInfo = { "description": "", "displayName": "FullWidthButton", "props": { "text": { "defaultValue": null, "description": "\uBC84\uD2BC \uB0B4\uBD80\uC5D0 \uB4E4\uC5B4\uAC00\uB294 \uD14D\uC2A4\uD2B8\uC785\uB2C8\uB2E4.", "name": "text", "required": true, "type": { "name": "string" } }, "color": { "defaultValue": null, "description": "\uBC84\uD2BC \uC0C9\uC0C1\uC785\uB2C8\uB2E4. \uC0C9\uC0C1\uC740 \uCD08\uB85D\uC0C9 \uD639\uC740 \uAC80\uC740\uC0C9\uC785\uB2C8\uB2E4.", "name": "color", "required": true, "type": { "name": "enum", "value": [{ "value": "\"green\"" }, { "value": "\"black\"" }] } }, "onClick": { "defaultValue": null, "description": "\uBC84\uD2BC\uC744 \uD074\uB9AD\uD588\uC744 \uB54C \uC791\uB3D9\uD558\uB294 \uD568\uC218\uC785\uB2C8\uB2E4.", "name": "onClick", "required": false, "type": { "name": "(() => void)" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["stories/FullWidthButton.tsx#FullWidthButton"] = { docgenInfo: FullWidthButton.__docgenInfo, name: "FullWidthButton", path: "stories/FullWidthButton.tsx#FullWidthButton" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./styles/theme.ts":
/*!*************************!*\
  !*** ./styles/theme.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const colors = {
  just_green: '#16D7C0',
  green_text: '#6CA49D',
  black_green: '#2A3E3B',
  dark_green: '#455553',
  middle_green: '#677371',
  light_green: '#9BA3A2',
  bright_green: '#AFB8B7',
  white_green: '#EAEAEA',
  white: '#FFFFFF',
  landing_green: '#ECF6F2',
  just_blue: '#3674FF',
  just_skyblue: '#D4DEF4',
  just_light_skyblue: '#F1F5FF',
  inactive_background: '#F9F9F9',
  background: '#F2F4F6',
  grey_line: '#D5DAD9',
  button_black: '#222222',
  black: '#091C19',
  just_purple: '#C64BFF',
  just_pink: '#FF98EC'
};
function FONT({
  weight,
  size,
  lineHeight,
  letterSpacing = 0,
  textDecorationLine = 'none'
}) {
  return `
    font-family: 'Pretendard-Regular';
    font-weight: ${weight};
    font-size: ${size}rem;
    line-height: ${lineHeight}px;
    letter-spacing: ${letterSpacing}em;
    text-decoration-line: ${textDecorationLine};
    `;
}
const fonts = {
  B_28: FONT({
    weight: 700,
    size: 2.8,
    lineHeight: 33
  }),
  B_22: FONT({
    weight: 700,
    size: 2.2,
    lineHeight: 26
  }),
  SB_17: FONT({
    weight: 600,
    size: 1.7,
    lineHeight: 20
  }),
  M_17: FONT({
    weight: 500,
    size: 1.7,
    lineHeight: 20
  }),
  R_17: FONT({
    weight: 400,
    size: 1.7,
    lineHeight: 20
  }),
  R_17_8: FONT({
    weight: 400,
    size: 1.7,
    lineHeight: 25
  }),
  M_16: FONT({
    weight: 500,
    size: 1.6,
    lineHeight: 25
  }),
  R_16: FONT({
    weight: 400,
    size: 1.6,
    lineHeight: 25
  }),
  figma_guide: FONT({
    weight: 500,
    size: 1.6,
    lineHeight: 33.6
  }),
  SB_15_2: FONT({
    weight: 600,
    size: 1.5,
    lineHeight: 18,
    letterSpacing: -2
  }),
  SB_15: FONT({
    weight: 600,
    size: 1.5,
    lineHeight: 18
  }),
  M_15: FONT({
    weight: 500,
    size: 1.5,
    lineHeight: 25
  }),
  M_15_18: FONT({
    weight: 500,
    size: 1.5,
    lineHeight: 18
  }),
  R_15: FONT({
    weight: 400,
    size: 1.5,
    lineHeight: 18
  }),
  R_15_2: FONT({
    weight: 400,
    size: 1.5,
    lineHeight: 18,
    letterSpacing: -2
  }),
  R_15_24: FONT({
    weight: 400,
    size: 1.5,
    lineHeight: 24
  }),
  SB_14_6: FONT({
    weight: 600,
    size: 1.4,
    lineHeight: 17
  }),
  M_14: FONT({
    weight: 500,
    size: 1.4,
    lineHeight: 17
  }),
  M_14_28: FONT({
    weight: 500,
    size: 1.4,
    lineHeight: 28
  }),
  R_14: FONT({
    weight: 400,
    size: 1.4,
    lineHeight: 17
  }),
  R_14_UNDERLINE: FONT({
    weight: 400,
    size: 1.4,
    lineHeight: 17,
    textDecorationLine: 'underline'
  }),
  M_13: FONT({
    weight: 500,
    size: 1.3,
    lineHeight: 16
  }),
  SB_12: FONT({
    weight: 500,
    size: 1.2,
    lineHeight: 14
  }),
  M_12: FONT({
    weight: 400,
    size: 1.2,
    lineHeight: 14
  }),
  R_12_12: FONT({
    weight: 400,
    size: 1.2,
    lineHeight: 12
  }),
  R_11: FONT({
    weight: 400,
    size: 1.1,
    lineHeight: 13
  })
};
const theme = {
  colors,
  fonts
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (theme);

/***/ })

}]);
//# sourceMappingURL=FullWidthButton-stories.iframe.bundle.js.map